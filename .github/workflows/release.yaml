name: release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      GITHUB_USERNAME: ${{ github.repository_owner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore .NET tools
        run: dotnet tool restore

      - name: Store next release version
        run: |
          git config user.name 'github-actions[release-bot]'
          git config user.email 'github-actions[release-bot]@users.noreply.github.com'
          RELEASE_VERSION=$(dotnet versionize --dry-run --skip-dirty | grep -oP 'bumping version from .* to \K[0-9]+\.[0-9]+\.[0-9]+')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Create release branch and bump version in changelog
        run: |
          git checkout -b release/v$RELEASE_VERSION
          dotnet versionize --skip-dirty --skip-commit --skip-tag
          git add .
          git commit -am "chore: release $RELEASE_VERSION"
          git push origin release/v$RELEASE_VERSION

      - name: Merge release branch to main branch and create annotated tag
        run: |
          git checkout main
          git pull origin main
          git merge --no-ff release/v$RELEASE_VERSION -m "chore(release): merge release v$RELEASE_VERSION"
          git tag -a v$RELEASE_VERSION -m "Release v$RELEASE_VERSION"
          git push origin main --follow-tags

      - name: Remove release branch
        run: git push origin --delete release/v$RELEASE_VERSION

      - name: Merge main branch to develop branch
        run: |
          git checkout develop
          git pull origin develop
          git merge --no-ff main -m "chore(release): merge main into develop"
          git push origin develop

      - name: Trigger deploy github release
        run: gh workflow run deploy-github-release.yaml --ref v$RELEASE_VERSION
